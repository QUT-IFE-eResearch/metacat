<!--
  * pathquery.dtd
  *
  *      Authors: Matt Jones
  * Organization: National Center for Ecological Analysis and Synthesis
  *    Copyright: 2000 Regents of the University of California and the
  *               National Center for Ecological Analysis and Synthesis
  *  For Details: http://www.nceas.ucsb.edu/
  *      Created: 13 June 2000
  *    File Info: '$Id: pathquery.dtd 2562 2005-09-07 20:13:18Z sgarg $'
  *
  * This DTD describes the structure and content of XML documents used
  * to represent, store, and exchange a simple path-based query expression.
  * This syntax represents a small subset of the capabilities of the XPath 
  * language (http://www.w3.org/TR/xpath), and is intended as a simple
  * query language for the metadata catalog database (mcdb).  It is 
  * intended that all expressions in this language can be mapped directly
  * into XPath syntax, but not all Xpath expressions can be mapped into this
  * syntax.
  *
  * Although ideally we would implement the query language as either the full
  * XPath language or as one of the emerging XML query languages (like
  * XML-QL or XQL), in practice this would be an involved undertaking that
  * doesn't necessarily have high payoffs.  But we will revisit this issue and
  * determine later whether these full-featured technologies are warranted
  * after we have some experience with a simpler implementation such as this.
-->

<!-- Overall query container -->
<!ELEMENT pathquery (meta_file_id*, querytitle*, returndoctype*, 
                     filterdoctype*, returnfield*, 
                     owner*, querygroup)>

<!-- The version of this query specification -->
<!ATTLIST pathquery version CDATA #FIXED "1.3">

<!-- a unique identifier for this query document -->
<!ELEMENT meta_file_id (#PCDATA)>

<!-- a descriptive title for this query document -->
<!ELEMENT querytitle (#PCDATA)>

<!-- optional doctype returned spec - only documents with this type returned -->
<!-- hits are looked up using package links to this doctype -->
<!ELEMENT returndoctype (#PCDATA)>

<!-- optional doctype filter - only documents with this type are searched -->
<!ELEMENT filterdoctype (#PCDATA)>

<!-- optional name of an xml node to be returned in the resultset -->
<!ELEMENT returnfield (#PCDATA)>

<!-- optional name of the owner of the documents to be returned -->
<!-- multiple owner fields are ORed together in the query -->
<!ELEMENT owner (#PCDATA)>

<!-- A group of related query terms -->
<!ELEMENT querygroup ( (queryterm|querygroup)+ )>

<!-- the boolean expression used to combine the query terms in this group -->
<!ATTLIST querygroup operator (INTERSECT|UNION) #REQUIRED>

<!-- a query term is the atomic unit of a query that can be translated
     to a single SELECT statement -->
<!ELEMENT queryterm (value, pathexpr?)>

<!-- a boolean flag indicating whether matches should be case-sensitive or
     case-independent for this queryterm, one of: true|false
     and searchmode is the type of match to perform against the text value -->
<!ATTLIST queryterm casesensitive (true|false) #REQUIRED
                    searchmode 
(contains|starts-with|ends-with|equals|isnot-equal|greater-than|less-than|
greater-than-equals|less-than-equals) #REQUIRED>

<!-- the text value for which we are searching -->
<!ELEMENT value (#PCDATA)>

<!-- the path to the TEXT node used to constrain the query -->
<!ELEMENT pathexpr (#PCDATA)>

<!-- End of file -->
